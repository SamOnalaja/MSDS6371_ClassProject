/*train file */
/* I pre-sorted the data to remove all but the three neighborhoods in question 1 */
%web_drop_table(WORK.IMPORT);
FILENAME REFFILE '/folders/myfolders/Kaggle/Analysis1.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.IMPORT;
	GETNAMES=YES;
RUN;
PROC CONTENTS DATA=WORK.IMPORT; RUN;
%web_open_table(WORK.IMPORT);


/*test file */
/* I pre-sorted the data to remove all neighborhoods but the 3 in question 1 */
%web_drop_table(WORK.IMPORT1);
FILENAME REFFILE '/folders/myfolders/Kaggle/testanalysis1.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.IMPORT1;
	GETNAMES=YES;
RUN;

PROC CONTENTS DATA=WORK.IMPORT1; RUN;
%web_open_table(WORK.IMPORT1);

/* identify data sets */
data train;
	set work.import;
	/* Remove observations 524 and 1299 */
	if id = 524 then delete;  
	if id = 1299 then delete;
	run;
proc print data=train; run;

/*log transformation due to outliers */
data logtrain;
	set train;
	logGrLivArea = log(GrLivArea);
	logSalePrice = log(SalePrice);
	run;
	
/*exploratory data analysis*/
proc univariate data=train;
var SalePrice GrLivArea;
run;

/* frequency table to show size of neighborhoods in dataset */
proc freq data= train;
	tables Neighborhood
	/plots=freqplot;
	run;
/*boxplots of saleprice by neighborhood*/
proc sgplot data=train;
hbox SalePrice / category=Neighborhood;
run;
/*boxplots of GrLivArea by neighborhood */
proc sgplot data= train;
hbox GrLivArea / category= Neighborhood;
run;


ods graphics on / attrpriority=none;
Title 'SalePrice by Neighborhood';
proc sgplot data=train;
 scatter y=SalePrice x=GrLivArea /group= Neighborhood markerattrs=(size=10px);
 styleattrs datasymbols=(circle square star);
run;

proc glm data=train plots =all;
class Neighborhood(ref = 'BrkSide');
model SalePrice = GrLivArea | Neighborhood /solution;
run;

/* lm for log transformed data */
proc glm data=logtrain plots =all;
class Neighborhood(ref = 'BrkSide');
model logSalePrice = logGrLivArea | Neighborhood /solution;
run;

/* after you've imported the training and test sets */
data test;
set test;
SalePrice = .;
;

data train2;
set train test;
run;

proc glm data = train2 plots = all;
class RoofStyle RoofMatl Exterior2st Exterior2nd MasVnrType;
model SalePrice = RoofStyle RoofMatl Exterior1st Exterior2nd MasVnrType LotArea BedroomAbvGr YearBuilt / cli so
output out = results p = Predict;
run;

/* Can't have negative predictions because of RMSLE */
/* Also must have only two columns with appropriate labels. */

data results2;
set results;
if Predict > 0 then Salerice = Predict;
if Predict < 0 then SalePrice = 100000;
keep id SalePrice;
where id> 1460;
;

proc means data = results2;
var SalePrice;
run;

